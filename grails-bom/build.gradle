apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

publishing {
    publications {
        maven(MavenPublication) {
            pom.withXml {
                def xml = asNode()
                def plugins = new Properties()
                plugins.load(new StringReader(new File("$projectDir/plugins.properties").text))

                def profiles = new Properties()
                profiles.load(new StringReader(new File("$projectDir/profiles.properties").text))

                xml.name[0].value = "Grails BOM"
                xml.description[0].value = "Grails default supported dependency definitions"

                xml.children().last() + {
                    def mkp = delegate

                    mkp.dependencyManagement {
                        mkp.dependencies {
                            for(sub in project.parent.subprojects) {
                                if(sub.name == 'grails-bom') continue

                                mkp.dependency {
                                    mkp.groupId sub.group
                                    mkp.artifactId sub.name
                                    mkp.version( sub.version )
                                    if(sub.name == 'grails-dependencies') {
                                        mkp.type 'pom'
                                    }

                                    if(sub.name == 'grails-bootstrap') {
                                        mkp.exclusions {
                                            mkp.exclusion {
                                                mkp.groupId 'jline'
                                                mkp.artifactId 'jline'
                                            }
                                            mkp.exclusion {
                                                mkp.groupId 'org.fusesource.jansi'
                                                mkp.artifactId 'jansi'
                                            }
                                            mkp.exclusion {
                                                mkp.groupId 'net.java.dev.jna'
                                                mkp.artifactId 'jna'
                                            }
                                            mkp.exclusion {
                                                mkp.groupId 'org.codehaus.groovy'
                                                mkp.artifactId 'groovy-ant'
                                            }
                                        }
                                    }

                                }
                            }

                            ['core', 'simple','web','rest-client','gorm', 'gorm-validation', 'gorm-support', 'gorm-async', 'test-support', 'hibernate-core','gorm-test'].each { name ->
                                mkp.dependency {
                                    mkp.groupId 'org.grails'
                                    mkp.artifactId "grails-datastore-$name"
                                    mkp.version( datastoreVersion )
                                }

                            }

                            ['', 'xml', 'swing', 'console', 'json', 'ant', 'sql', 'templates', 'xml','nio'].each { name ->
                                mkp.dependency {
                                    mkp.groupId 'org.codehaus.groovy'
                                    mkp.artifactId name ? "groovy-$name" : "groovy"
                                    mkp.version( groovyVersion )
                                }
                            }

                            ['aop', 'aspects', 'beans', 'context-support', 'context', 'core', 'expression', 'instrument', 'jdbc','jms', 'messaging', 'orm', 'oxm', 'test', 'tx', 'web', 'webmvc', 'websocket'].each { name ->
                                mkp.dependency {
                                    mkp.groupId 'org.springframework'
                                    mkp.artifactId "spring-$name"
                                    mkp.version( springVersion )
                                }
                            }

                            mkp.dependency {
                                mkp.groupId 'io.methvin'
                                mkp.artifactId "directory-watcher"
                                mkp.version(directoryWatcherVersion) //0.3.0
                            }

                            mkp.dependency {
                                mkp.groupId 'org.springframework'
                                mkp.artifactId "springloaded"
                                mkp.version( springLoadedVersion )
                            }

                            for(plugin in plugins) {
                                mkp.dependency {
                                    mkp.groupId 'org.grails.plugins'
                                    mkp.artifactId plugin.key
                                    def version = plugin.value
                                    if(!isBuildSnapshot && version.toString().endsWith("-SNAPSHOT")) {
                                        throw new RuntimeException("Cannot have a snapshot dependency on a plugin [$plugin.key] for a release!")
                                    }
                                    mkp.version(version)
                                }
                            }

                            ['async', 'events'].each { name ->
                                mkp.dependency {
                                    mkp.groupId 'org.grails.plugins'
                                    mkp.artifactId name
                                    mkp.version( asyncVersion )
                                }
                            }
                            
                            ['gpars', 'rxjava', 'rxjava2'].each { name ->
                                mkp.dependency {
                                    mkp.groupId 'org.grails'
                                    mkp.artifactId "grails-async-$name"
                                    mkp.version( asyncVersion )
                                }
                                mkp.dependency {
                                    mkp.groupId 'org.grails'
                                    mkp.artifactId "grails-events-$name"
                                    mkp.version( asyncVersion )
                                }                                
                            }                            

                            mkp.dependency {
                                mkp.groupId 'org.spockframework'
                                mkp.artifactId "spock-core"
                                mkp.version( spockVersion )
                            }

                            mkp.dependency {
                                mkp.groupId 'org.spockframework'
                                mkp.artifactId "spock-spring"
                                mkp.version( spockVersion )
                            }

                            mkp.dependency {
                                mkp.groupId 'org.grails.plugins'
                                mkp.artifactId "gsp"
                                mkp.version( gspVersion )
                            }


                            for(profile in profiles) {
                                mkp.dependency {
                                    mkp.groupId 'org.grails.profiles'
                                    mkp.artifactId profile.key
                                    def version = profile.value
                                    if(!isBuildSnapshot && version.toString().endsWith("-SNAPSHOT")) {
                                        throw new RuntimeException("Cannot have a snapshot dependency on a profile [$profile.key] for a release!")
                                    }
                                    mkp.version(version)
                                }
                            }

                            ['gorm-', 'web-', ''].each { name ->
                                mkp.dependency {
                                    mkp.groupId 'org.grails'
                                    mkp.artifactId "grails-${name}testing-support"
                                    mkp.version( testingSupportVersion )
                                }
                            }
                        }
                    }
                }
            }

        }
    }
}